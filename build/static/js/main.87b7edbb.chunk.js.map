{"version":3,"sources":["constants/index.js","reducers/products.js","utils/index.js","reducers/cart.js","reducers/index.js","actions/index.js","api/index.js","sagas/index.js","components/cards/cardDefault.js","components/loader/index.js","pages/products/index.js","pages/cart/index.js","pages/404/index.js","components/navbar/index.js","App.js","startApp.js","index.js"],"names":["REQUEST_PRODUCTS","REQUEST_SUCCESS_PRODUCTS","REQUEST_FAIL_PRODUCTS","ADD_CART","REMOVE_CART","REMOVE_ITEM_CART","REMOVE_ALL_CART","initialState","isLoading","data","setCartLocalStorage","cartState","localStorage","setItem","JSON","stringify","getCartLocalStorage","parse","getItem","state","action","type","payload","product","count","id","findIndex","item","name","newstate","concat","splice","combineReducers","products","cart","dealers","requestProducts","requestSuccesProducts","addToCart","URL_API","getProducts","url","length","axios","get","then","response","URL","requestProductsSaga","saga","call","API","put","takeLatest","CardDefault","children","className","style","backgroundImage","image","Loader","mapDispatchToProps","connect","useEffect","s","map","card","i","key","onClick","price","removeFromCart","removeItemFromCart","removeAllCart","useState","setPrice","renderCardChildren","Fragment","toFixed","toString","clickRemoveHandler","onChange","e","parsedValue","parseInt","target","value","isNaN","changeCountHandler","sum","reduce","acc","Navbar","countCart","setCountCart","forEach","el","to","basename","path","component","Products","Cart","PageNotFound","exact","startAppHandler","callback","checkboxes","document","getElementById","querySelectorAll","checked","push","detail","remove","sagaMiddleware","createSagaMiddleware","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","init","store","createStore","rootReducer","run","ReactDOM","render","eventAPP","CustomEvent","addEventListener"],"mappings":"wPAAaA,EAAmB,mBACnBC,EAA2B,2BAC3BC,EAAwB,wBAExBC,EAAW,WACXC,EAAc,cACdC,EAAmB,mBACnBC,EAAkB,kBCDzBC,EAAe,CACjBC,WAAW,EACXC,KAAM,I,QCRGC,EAAsB,SAACC,GAChCC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUJ,KAGnCK,EAAsB,WAC/B,OAAOF,KAAKG,MAAML,aAAaM,QAAQ,UAAY,ICIxC,aAA4C,IAA3CC,EAA0C,uDAAlCH,IAAuBI,EAAW,uCAC/CC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,QAEb,OAAQD,GACJ,KAAKlB,EAAW,IACJoB,EAAmBD,EAAnBC,QAASC,EAAUF,EAAVE,MACXC,EAAKN,EAAMO,WAAU,SAAAC,GAAI,OAAIA,EAAKC,OAASL,EAAQK,QAEzD,IAAY,IAARH,EAAW,CACX,IAAMI,EAAWV,EAAMW,OAAN,eAAiBP,EAAjB,CAA0BC,MAAO,KAElD,OADAd,EAAoBmB,GACbA,EAOX,OAJAL,EAAQL,EAAMM,GAAID,MAAQA,EAAOL,EAAMM,GAAID,QAE3Cd,EAAoB,YAAIS,IAEjB,YAAIA,GAGf,KAAKf,EAAc,IACPmB,EAAYD,EAAZC,QACFE,EAAKN,EAAMO,WAAU,SAAAC,GAAI,OAAIA,EAAKC,OAASL,EAAQK,QAKzD,OAHAT,EAAMM,GAAID,QACVd,EAAoB,YAAIS,IAEjB,YAAIA,GAGf,KAAKd,EAAmB,IACZkB,EAAYD,EAAZC,QACFE,EAAKN,EAAMO,WAAU,SAAAC,GAAI,OAAIA,EAAKC,OAASL,EAAQK,QAKzD,OAHAT,EAAMY,OAAON,EAAI,GACjBf,EAAoB,YAAIS,IAEjB,YAAIA,GAGf,KAAKb,EAED,OADAI,EAAoB,IACb,GACX,QACI,OAAOS,IChDJa,cAAgB,CAC3BC,SHIW,WAAmC,IAAlCd,EAAiC,uDAAzBZ,EAAca,EAAW,uCACtCC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,QAEb,OAAQD,GACJ,KAAKrB,EACD,OAAO,eACAmB,EADP,CAEIX,WAAW,IAEnB,KAAKP,EACD,OAAO,eACAkB,EADP,CAEIV,KAAMa,EAAQb,KACdD,WAAW,IAEnB,KAAKN,EACD,OAAO,eACAiB,EADP,CAEIX,WAAW,IAEnB,QACI,OAAOW,IGxBfe,OACAC,Y,yBCCG,SAASC,EAAgBD,GAC5B,MAAO,CACHd,KAAMrB,EACNsB,QAAS,CACLa,YAKL,SAASE,EAAsB5B,GAClC,MAAO,CACHY,KAAMpB,EACNqB,QAAS,CACLb,SAcL,SAAS6B,EAAWf,EAASC,GAChC,MAAO,CACHH,KAAMlB,EACNmB,QAAS,CACLC,UACAC,U,qBCxCNe,EAAU,gDAYD,GACXC,YAVgB,SAACL,GACjB,IAAMM,EAAMN,GAAWA,EAAQO,OAAnB,UAA+BH,EAA/B,2BAAyDJ,GAAzD,UAAwEI,EAAxE,UAEZ,OAAOI,IAAMC,IAAIH,GACdI,MAAM,SAACC,GACN,OAAOA,EAASrC,SAMpBsC,IAbQ,6C,WCOFC,G,WAWAC,GAXV,SAAUD,EAAoB5B,GAA9B,yEAGkB,OAHlB,SAEae,EAAYf,EAAOE,QAAnBa,QAFb,SAGwBe,YAAKC,EAAIX,YAAaL,GAH9C,OAKK,OAFM1B,EAHX,gBAKW2C,YAAIf,EAAsB5B,IALrC,8BAOM,OAPN,mCAOY2C,aAAwB,EAAD,GFYxB,CACH/B,KAAMnB,EACNoB,QAAS,CACLd,WAAW,MEtBvB,qDAWA,SAAUyC,IAAV,iEACE,OADF,SACQI,YAAWrD,EAAkBgD,GADrC,uCAIeC,Q,gBCAAK,EApBK,SAAC,GAAyB,IAAxB/B,EAAuB,EAAvBA,QAASgC,EAAc,EAAdA,SAC3B,OACI,yBAAKC,UAAU,cACX,yBACIC,MAAO,CACHC,gBAAgB,OAAD,OAASP,EAAIJ,KAAb,OAAmBxB,EAAQoC,MAA3B,MAEnBH,UAAU,WAEd,4BAAKjC,EAAQK,MACZ2B,ICLEK,EARA,WACX,OACI,yBAAKJ,UAAU,YACX,yBAAKA,UAAU,oBC0DrBK,EAAqB,CACvBzB,kBACAE,aAWWwB,eArBS,SAAC3C,GACrB,MAAO,CACHc,SAAUd,EAAMc,SAASxB,KACzB0B,QAAShB,EAAMgB,QACf3B,UAAWW,EAAMc,SAASzB,aAiBMqD,EAAzBC,EApEM,SAAC,GAAgE,IAA/D7B,EAA8D,EAA9DA,SAAUE,EAAoD,EAApDA,QAAS3B,EAA2C,EAA3CA,UAAW4B,EAAgC,EAAhCA,gBAAiBE,EAAe,EAAfA,UAMlE,OAJAyB,qBAAU,WACP3B,EAAgBD,KAChB,IAGC,yBAAKqB,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,MAAMQ,EAAG,IACpB,sEAIR,yBAAKR,UAAU,OAENhD,EAuBK,kBAAC,EAAD,MAtBFyB,EAASgC,KAAI,SAACC,EAAMC,GAChB,OACI,yBACIC,IAAKD,EACLX,UAAU,sBAEV,kBAAC,EAAD,CACIjC,QAAS2C,GAET,4BACI7C,KAAK,SACLmC,UAAU,MACVa,QAAS,kBAAM/B,EAAU4B,KAEzB,uBAAGV,UAAU,uBAAb,qBALJ,oDAOI,yCAAUU,EAAKI,kB,QC0FrDT,EAAqB,CACvBvB,YACAiC,eNtFG,SAAyBhD,GAC5B,MAAO,CACHF,KAAMjB,EACNkB,QAAS,CACLC,aMmFRiD,mBNvEG,SAA6BjD,GAChC,MAAO,CACHF,KAAMhB,EACNiB,QAAS,CACLC,aMoERkD,cN/EG,SAAwBlD,GAC3B,MAAO,CACHF,KAAMf,EACNgB,QAAS,MMuFFwC,eArBS,SAAC3C,GACrB,MAAO,CACHc,SAAUd,EAAMe,QAmBgB2B,EAAzBC,EAtIF,SAAC,GAAgF,IAA9E7B,EAA6E,EAA7EA,SAAUK,EAAmE,EAAnEA,UAAWiC,EAAwD,EAAxDA,eAAgBC,EAAwC,EAAxCA,mBAAoBC,EAAoB,EAApBA,cAAoB,EAC/DC,mBAAS,GADsD,mBAClFJ,EADkF,KAC3EK,EAD2E,KAqBnFC,EAAqB,SAACrD,GAAa,IAC7BC,EAAiBD,EAAjBC,MAAO8C,EAAU/C,EAAV+C,MACf,OACI,kBAAC,IAAMO,SAAP,KACI,kEAAerD,EAAQ8C,GAAOQ,QAAQ,GAAGC,YAEzC,yBAAKvB,UAAU,OACX,4BACInC,KAAK,SACLmC,UAAU,4BACVa,QAAS,kBA5BF,SAAC9C,GACpBA,EAAQC,MAAQ,GAChB+C,EAAehD,GA0BYyD,CAAmBzD,KAEtC,uBAAGiC,UAAU,kBAAb,WAEA,yBAAKA,UAAU,gBACX,2BACInC,KAAK,OACL4D,SAAU,SAACC,GAAD,OAzBP,SAACA,EAAG3D,GAC3B,IAAM4D,EAAcC,SAASF,EAAEG,OAAOC,QAEjCC,MAAMJ,IAAkBA,EAAc,GACvC7C,EAAUf,EAAS4D,GAqBcK,CAAmBN,EAAG3D,IACvC+D,MAAO9D,KAIf,4BACIH,KAAK,SACLmC,UAAU,8BACVa,QAAS,kBAAM/B,EAAUf,KAEzB,uBAAGiC,UAAU,kBAAb,SAGR,4BACInC,KAAK,SACLmC,UAAU,MACVa,QAAS,kBAAMG,EAAmBjD,KAE9B,uBAAGiC,UAAU,uBAAb,kBALR,gDAoBZ,OARAO,qBAAU,WACN,IAAM0B,EAAMxD,EAASyD,QAAO,SAACC,EAAD,GACxB,OAAOA,EADyC,EAAlBrB,MAAkB,EAAX9C,QAEtC,GAEHmD,EAASc,EAAIX,QAAQ,MACtB,CAAC7C,IAGA,yBAAKuB,UAAU,aAEPvB,EAASS,OACT,6BACI,qJACA,wKACgC4B,EAAMS,YAEtC,4BACI1D,KAAK,SACLmC,UAAU,WACVa,QA1EU,WAC1BI,MA2EgB,uBAAGjB,UAAU,uBAAb,kBALJ,sGAQA,yBAAKA,UAAU,OAEPvB,EAASgC,KAAI,SAAC1C,EAAS4C,GACnB,OACI,yBACIC,IAAKD,EACLX,UAAU,iBAEV,kBAAC,EAAD,CACIjC,QAASA,GAERqD,EAAmBrD,UAQ9C,sICrHH,aACX,OAAO,yBAAKiC,UAAU,aAAY,0ICiCvBoC,EAhCA,SAAC,GAAY,IAAX1D,EAAU,EAAVA,KAAU,EACWwC,mBAAS,GADpB,mBAChBmB,EADgB,KACLC,EADK,KAUvB,OAPA/B,qBAAU,WACR,IAAI0B,EAAM,EAEVvD,EAAK6D,SAAQ,SAAAC,GAAE,OAAIP,GAAOO,EAAGxE,SAC7BsE,EAAaL,KACZ,CAACvD,IAGF,yBAAKsB,UAAU,gBACb,6BACE,yBAAKA,UAAU,eACb,wBAAIA,UAAU,SACZ,4BAAI,kBAAC,IAAD,CAASyC,GAAG,aAAZ,yCACJ,4BACE,kBAAC,IAAD,CAASA,GAAG,SAAZ,8CACWJ,GAAa,YCoBzB/B,eAXS,SAAC3C,GACvB,MAAO,CACHe,KAAMf,EAAMe,QASsB,CAAEE,mBAA3B0B,EA7BH,SAAC,GAA6B,IAA5B5B,EAA2B,EAA3BA,KAA2B,EAArBE,gBAClB,OACE,kBAAC,IAAD,CAAQ8D,SAAS,KACb,kBAAC,EAAD,CAAQhE,KAAMA,IAEd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiE,KAAK,YAAYC,UAAWC,IACnC,kBAAC,IAAD,CAAOF,KAAK,QAAQC,UAAWE,IAFjC,IAGE,kBAAC,IAAD,CAAOF,UAAWG,KAGpB,kBAAC,IAAD,CAAOC,OAAK,EAACL,KAAK,KAChB,kBAAC,IAAD,CAAUF,GAAG,mBCzBVQ,EAAkB,SAACvB,EAAGwB,EAAUrF,GACzC,IAAIc,EAAU,GAEd,GAAa,SAATd,EAIA,IAHA,IACMsF,EADOC,SAASC,eAAe,gBACbC,iBAAiB,eAEhC3C,EAAI,EAAGA,EAAIwC,EAAWjE,OAAQyB,IAC/BwC,EAAWxC,GAAG4C,SACd5E,EAAQ6E,KAAKL,EAAWxC,GAAGmB,YAKnCnD,EAAU+C,EAAE+B,OAAS/B,EAAE+B,OAAS,GAGpCL,SAASC,eAAe,aAAaK,SACrCR,EAASvE,ICDPgF,G,MAAiBC,eAGjBC,GADmBC,OAAOC,sCAAwCC,KACtCC,YAAgBN,IAE5CO,GAAO,SAACvF,GACV,IAAMwF,EAAQC,YACVC,EACA,CAAE1F,WACFkF,GAGJF,EAAeW,IAAI7E,GAEnB8E,IAASC,OACL,kBAAC,IAAD,CAAUL,MAAOA,GACb,kBAAC,EAAD,OAEJf,SAASC,eAAe,UAOhCS,OAAOW,SAAW,IAAIC,YAAY,WAAY,CAAC,OAD9B,CAAE,cAGCtB,SAASC,eAAe,aAEhCsB,iBAAiB,SAAS,SAACjD,GAAD,OAAOuB,EAAgBvB,EAAGwC,GAAM,WACtEd,SAASuB,iBAAiB,YAAY,SAACjD,GAAD,OAAOuB,EAAgBvB,EAAGwC,S","file":"static/js/main.87b7edbb.chunk.js","sourcesContent":["export const REQUEST_PRODUCTS = \"REQUEST_PRODUCTS\";\nexport const REQUEST_SUCCESS_PRODUCTS = \"REQUEST_SUCCESS_PRODUCTS\";\nexport const REQUEST_FAIL_PRODUCTS = \"REQUEST_FAIL_PRODUCTS\";\n\nexport const ADD_CART = \"ADD_CART\";\nexport const REMOVE_CART = \"REMOVE_CART\";\nexport const REMOVE_ITEM_CART = \"REMOVE_ITEM_CART\";\nexport const REMOVE_ALL_CART = \"REMOVE_ALL_CART\";\n","import {\n    REQUEST_PRODUCTS,\n    REQUEST_SUCCESS_PRODUCTS,\n    REQUEST_FAIL_PRODUCTS,\n} from 'constants/index';\n\nconst initialState = {\n    isLoading: false,\n    data: []\n}\n\nexport default (state = initialState, action) => {\n    const {type, payload} = action;\n\n    switch (type) {\n        case REQUEST_PRODUCTS:\n            return {\n                ...state,\n                isLoading: true\n            };\n        case REQUEST_SUCCESS_PRODUCTS:\n            return {\n                ...state,\n                data: payload.data,\n                isLoading: false\n            };\n        case REQUEST_FAIL_PRODUCTS:\n            return {\n                ...state,\n                isLoading: false\n            };\n        default:\n            return state;\n    }\n}","export const setCartLocalStorage = (cartState) => {\n    localStorage.setItem('cart', JSON.stringify(cartState));\n}\n\nexport const getCartLocalStorage = () => {\n    return JSON.parse(localStorage.getItem('cart')) || [];\n}\n\n","import {\n    ADD_CART,\n    REMOVE_CART,\n    REMOVE_ITEM_CART,\n    REMOVE_ALL_CART,\n} from 'constants/index';\n\nimport { setCartLocalStorage, getCartLocalStorage } from 'utils/index';\n\nexport default (state = getCartLocalStorage(), action) => {\n    const {type, payload} = action;\n\n    switch (type) {\n        case ADD_CART: {\n            const { product, count } = payload;\n            const id = state.findIndex(item => item.name === product.name);\n\n            if (id === -1) {\n                const newstate = state.concat({...product, count: 1});\n                setCartLocalStorage(newstate);\n                return newstate;\n            }\n\n            count ? state[id].count = count :state[id].count++;\n\n            setCartLocalStorage([...state]);\n\n            return [...state];\n        }\n\n        case REMOVE_CART: {\n            const { product } = payload;\n            const id = state.findIndex(item => item.name === product.name);\n\n            state[id].count--;\n            setCartLocalStorage([...state]);\n\n            return [...state];\n        }\n        \n        case REMOVE_ITEM_CART: {\n            const { product } = payload;\n            const id = state.findIndex(item => item.name === product.name);\n\n            state.splice(id, 1);\n            setCartLocalStorage([...state]);\n\n            return [...state];\n        }\n\n        case REMOVE_ALL_CART:\n            setCartLocalStorage([]);\n            return [];\n        default:\n            return state;\n    }\n}","import {combineReducers} from 'redux';\n\nimport products from './products';\nimport cart from './cart';\nimport dealers from './cart';\n\nexport default combineReducers({\n    products,\n    cart,\n    dealers\n});","import {\n    REQUEST_PRODUCTS,\n    REQUEST_SUCCESS_PRODUCTS,\n    REQUEST_FAIL_PRODUCTS,\n    ADD_CART,\n    REMOVE_CART,\n    REMOVE_ITEM_CART,\n    REMOVE_ALL_CART\n} from 'constants/index';\n\nexport function requestProducts(dealers) {\n    return {\n        type: REQUEST_PRODUCTS,\n        payload: {\n            dealers\n        }\n    }\n}\n\nexport function requestSuccesProducts(data) {\n    return {\n        type: REQUEST_SUCCESS_PRODUCTS,\n        payload: {\n            data\n        }\n    }\n}\n\nexport function requestFailProducts() {\n    return {\n        type: REQUEST_FAIL_PRODUCTS,\n        payload: {\n            isLoading: false,\n        }\n    }\n}\n\nexport function addToCart (product, count) {\n    return {\n        type: ADD_CART,\n        payload: {\n            product,\n            count\n        }\n    }\n}\n\nexport function removeFromCart (product) {\n    return {\n        type: REMOVE_CART,\n        payload: {\n            product\n        }\n    }\n}\n\nexport function removeAllCart (product) {\n    return {\n        type: REMOVE_ALL_CART,\n        payload: {}\n    }\n}\n\nexport function removeItemFromCart (product) {\n    return {\n        type: REMOVE_ITEM_CART,\n        payload: {\n            product\n        }\n    }\n}\n","import axios from 'axios';\n\nconst URL_API = 'https://murmuring-tor-81614.herokuapp.com/api';\nconst URL = \"https://murmuring-tor-81614.herokuapp.com\";\n\nconst getProducts = (dealers) => {\n    const url = dealers && dealers.length ? `${URL_API}/goods/?dealers=${dealers}` : `${URL_API}/goods`;\n\n    return axios.get(url)\n      .then( (response) => {\n        return response.data;\n      });\n}\n\nexport default {\n    getProducts,\n    URL\n}\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport { REQUEST_PRODUCTS } from 'constants/index';\n\nimport {\n    requestSuccesProducts,\n    requestFailProducts,\n} from 'actions/index';\n\nimport API from 'api/index';\n\nfunction* requestProductsSaga(action) {\n   try {\n     const { dealers } = action.payload;\n     const data = yield call(API.getProducts, dealers);\n\n     yield put(requestSuccesProducts(data));\n   } catch (e) {\n      yield put(requestFailProducts(e));\n   }\n}\n\nfunction* saga() {\n  yield takeLatest(REQUEST_PRODUCTS, requestProductsSaga);\n}\n\nexport default saga;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport API from 'api/index';\n\nconst CardDefault = ({product, children}) => {\n    return (\n        <div className=\"card px-20\">\n            <div\n                style={{\n                    backgroundImage: `url(${API.URL}${product.image})`,\n                }}\n                className=\"bg-img\"\n            />\n            <h4>{product.name}</h4>\n            {children}\n        </div>\n    )\n}\n\nCardDefault.propTypes = {\n    product: PropTypes.object.isRequired,\n    children: PropTypes.node\n}\n\nexport default CardDefault;\n","import React from 'react';\n\nconst Loader = () => {\n    return (\n        <div className=\"progress\">\n            <div className=\"indeterminate\"></div>\n        </div>\n    )\n}\n\nexport default Loader;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { requestProducts, addToCart } from 'actions/index';\n\nimport CardDefault from 'components/cards/cardDefault';\nimport Loader from 'components/loader';\n\nconst ProductsPage = ({products, dealers, isLoading, requestProducts, addToCart}) => {\n\n    useEffect(() => {\n       requestProducts(dealers);\n    }, [])\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col\" s={12}>\n                    <h1>Товары</h1>\n                </div>\n            </div>\n\n            <div className=\"row\">\n                {\n                    !isLoading ?\n                        products.map((card, i) => {\n                            return (\n                                <div\n                                    key={i}\n                                    className=\"col s12 m6 l4 mb-3\"\n                                >\n                                    <CardDefault\n                                        product={card}\n                                    >\n                                        <button\n                                            type=\"button\"\n                                            className=\"btn\"\n                                            onClick={() => addToCart(card)}\n                                        >\n                                            <i className=\"material-icons left\">add_shopping_cart</i>\n                                            в корзину\n                                            <span> ₽ {card.price}</span>\n                                        </button>\n                                    </CardDefault>\n                                </div>\n                            )\n                        })\n                        : <Loader />\n                }\n            </div>\n            \n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        products: state.products.data,\n        dealers: state.dealers,\n        isLoading: state.products.isLoading\n    }\n}\n\nconst mapDispatchToProps = {\n    requestProducts,\n    addToCart\n}\n\nProductsPage.propTypes = {\n    dealers: PropTypes.array,\n    products: PropTypes.array.isRequired,\n    requestProducts: PropTypes.func.isRequired,\n    addToCart: PropTypes.func.isRequired,\n    isLoading: PropTypes.bool.isRequired\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsPage);\n","import React, {useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    addToCart,\n    removeFromCart,\n    removeItemFromCart,\n    removeAllCart\n} from 'actions/index';\n\nimport CardDefault from 'components/cards/cardDefault';\n\nconst Cart = ({ products, addToCart, removeFromCart, removeItemFromCart, removeAllCart }) => {\n    const [price, setPrice] = useState(0);\n\n    const clickRemoveHandler = (product) => {\n        if (product.count > 1) {\n            removeFromCart(product);\n        }\n    }\n\n    const clickRemoveAllHandler = () => {\n        removeAllCart()\n    }\n\n    const changeCountHandler = (e, product) => {\n        const parsedValue = parseInt(e.target.value);\n\n        if (!isNaN(parsedValue) && ( parsedValue > 0)) {\n            addToCart(product, parsedValue);\n        }\n    }\n\n    const renderCardChildren = (product) => {\n        const { count, price } = product;\n        return (\n            <React.Fragment>\n                <h5>Цена: ₽ {+(count * price).toFixed(2).toString()}</h5>\n\n                <div className=\"row\">\n                    <button\n                        type=\"button\"\n                        className=\"col btn-floating red py-0\"\n                        onClick={() => clickRemoveHandler(product)}\n                    >\n                    <i className=\"material-icons\">remove</i>\n                    </button>\n                    <div className=\"col s6 py-10\">\n                        <input\n                            type=\"text\"\n                            onChange={(e) => changeCountHandler(e, product)}\n                            value={count}\n                        />\n                    </div>\n\n                    <button \n                        type=\"button\"\n                        className=\"col btn-floating green py-0\"\n                        onClick={() => addToCart(product)}\n                    >\n                        <i className=\"material-icons\">add</i>\n                    </button>\n                </div>\n                <button \n                    type=\"button\"\n                    className=\"btn\"\n                    onClick={() => removeItemFromCart(product)}\n                >\n                        <i className=\"material-icons left\">delete_forever</i>\n                        Удалить\n                </button>\n            </React.Fragment>\n        )\n    }\n\n    useEffect(() => {\n        const sum = products.reduce((acc,{price, count}) => {\n            return acc += price * count;\n        }, 0);\n\n        setPrice(sum.toFixed(2));\n    }, [products])\n\n    return (\n        <div className=\"container\">\n            {\n                products.length ?\n                <div>\n                    <h2>Товары в вашей корзине</h2>\n                    <h4>\n                        Общая стоимость товаров: ₽ {price.toString()}\n                    </h4>\n                    <button \n                        type=\"button\"\n                        className=\"btn mb-3\"\n                        onClick={clickRemoveAllHandler}\n                    >\n                        <i className=\"material-icons left\">delete_forever</i>\n                        Удалить все товары\n                    </button>\n                    <div className=\"row\">\n                        {\n                            products.map((product, i) => {\n                                return (\n                                    <div\n                                        key={i}\n                                        className=\"col s12 m6 l4\"\n                                    >\n                                        <CardDefault\n                                            product={product}\n                                        >\n                                            {renderCardChildren(product)}\n                                        </CardDefault>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n                : <h2>Ваша корзина пуста</h2>\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        products: state.cart\n    }\n}\n\nconst mapDispatchToProps = {\n    addToCart,\n    removeFromCart,\n    removeItemFromCart,\n    removeAllCart\n}\n\nCart.propTypes = {\n    products: PropTypes.array.isRequired,\n    addToCart: PropTypes.func.isRequired,\n    removeFromCart: PropTypes.func.isRequired,\n    removeItemFromCart: PropTypes.func.isRequired,\n    removeAllCart: PropTypes.func.isRequired,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n","import React from 'react';\n\nexport default () => {\n    return <div className=\"container\"><h1>Страница не найдена</h1></div>;\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst Navbar = ({cart}) => {\n    const [countCart, setCountCart] = useState(0);\n\n    useEffect(() => {\n      let sum = 0;\n\n      cart.forEach(el => sum += el.count);\n      setCountCart(sum);\n    }, [cart]);\n\n    return (\n      <div className=\"navbar-fixed\">\n        <nav>\n          <div className=\"nav-wrapper\">\n            <ul className=\"right\">\n              <li><NavLink to=\"/products\">Товары</NavLink></li>\n              <li>\n                <NavLink to=\"/cart\">\n                  Корзина {countCart || null}\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    )\n}\n\nNavbar.propTypes = {\n  cart: PropTypes.array.isRequired\n}\n\nexport default Navbar;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { requestProducts } from 'actions/index';\n\nimport Products from 'pages/products';\nimport Cart from 'pages/cart';\nimport PageNotFound from 'pages/404';\n\nimport Navbar from 'components/navbar';\n\nconst App = ({cart, requestProducts}) => {\n  return (\n    <Router basename=\"/\">\n        <Navbar cart={cart} />\n\n        <Switch>\n          <Route path=\"/products\" component={Products} />\n          <Route path=\"/cart\" component={Cart} />>\n          <Route component={PageNotFound} />\n        </Switch>\n\n        <Route exact path=\"/\">\n          <Redirect to=\"/products\" />\n        </Route>\n    </Router>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      cart: state.cart\n  }\n}\n\nApp.propTypes = {\n  cart: PropTypes.array.isRequired,\n  requestProducts: PropTypes.func.isRequired,\n}\n\nexport default connect(mapStateToProps, { requestProducts })(App);\n","export const startAppHandler = (e, callback, type) => {\n    let dealers = [];\n\n    if (type === 'form') {\n        const form = document.getElementById('form-dealers');\n        const checkboxes = form.querySelectorAll('.ch-dealers');\n\n        for (let i = 0; i < checkboxes.length; i++) {\n            if (checkboxes[i].checked) {\n                dealers.push(checkboxes[i].value);\n            }\n        }\n\n    } else {\n        dealers = e.detail ? e.detail : [];\n    }\n\n    document.getElementById('start-app').remove();\n    callback(dealers);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './reducers';\nimport saga from 'sagas/index';\n\nimport App from './App';\n\nimport { startAppHandler } from 'startApp';\n\nimport './style/utils.css';\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancer = composeEnhancers(applyMiddleware(sagaMiddleware));\n\nconst init = (dealers) => {\n    const store = createStore(\n        rootReducer,\n        { dealers },\n        enhancer\n    );\n\n    sagaMiddleware.run(saga);\n\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>,\n        document.getElementById('root')\n    );\n}\n\n//==============================================================\n// Create the event\nconst dealers =  [ \"0c4aab30\"];\nwindow.eventAPP = new CustomEvent(\"app_load\", {'detail': dealers });\n\nconst btnStartApp = document.getElementById('start-btn');\n\nbtnStartApp.addEventListener('click', (e) => startAppHandler(e, init, 'form'))\ndocument.addEventListener('app_load', (e) => startAppHandler(e, init));\n"],"sourceRoot":""}