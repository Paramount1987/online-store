{"version":3,"sources":["constants/index.js","reducers/products.js","utils/index.js","reducers/index.js","reducers/cart.js","reducers/dealers.js","actions/index.js","api/index.js","sagas/index.js","components/cards/cardDefault.js","components/loader/index.js","components/button/index.js","pages/products/index.js","pages/cart/index.js","pages/404/index.js","components/navbar/index.js","App.js","startApp.js","index.js"],"names":["REQUEST_PRODUCTS","REQUEST_SUCCESS_PRODUCTS","REQUEST_FAIL_PRODUCTS","ADD_CART","REMOVE_COUNT_CART","REMOVE_ITEM_CART","REMOVE_ALL_CART","initialState","isLoading","data","getCartLocalStorage","JSON","parse","localStorage","getItem","combineReducers","products","state","action","type","payload","cart","product","count","id","findIndex","item","name","newstate","find","splice","dealers","requestProducts","requestSuccesProducts","addToCart","URL_API","getProducts","url","length","axios","get","then","response","getDealers","catch","error","console","log","URL","requestProductsSaga","saga","call","API","put","takeLatest","CardDefault","children","className","style","backgroundImage","image","Loader","Button","clickHandler","onClick","mapDispatchToProps","connect","useEffect","s","map","card","i","key","price","removeCountFromCart","removeItemFromCart","removeAllCart","useState","setPrice","renderCardChildren","Fragment","toFixed","toString","clickRemoveHandler","onChange","e","parsedValue","parseInt","target","value","isNaN","changeCountHandler","sum","reduce","acc","cartState","setItem","stringify","Navbar","countCart","setCountCart","el","to","basename","path","component","Products","Cart","PageNotFound","exact","startAppHandler","event","initApp","typeEvent","form","document","getElementById","checkboxes","querySelectorAll","Array","prototype","slice","filter","checked","detail","remove","renderCheckboxes","preloader","container","forEach","dealer","push","innerHTML","join","sagaMiddleware","createSagaMiddleware","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","rootReducer","run","ReactDOM","render","eventAPP","CustomEvent","addEventListener","a","async","renderDealers"],"mappings":"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","file":"static/js/main.69ca8cf5.chunk.js","sourcesContent":["export const REQUEST_PRODUCTS = \"REQUEST_PRODUCTS\";\nexport const REQUEST_SUCCESS_PRODUCTS = \"REQUEST_SUCCESS_PRODUCTS\";\nexport const REQUEST_FAIL_PRODUCTS = \"REQUEST_FAIL_PRODUCTS\";\n\nexport const ADD_CART = \"ADD_CART\";\nexport const REMOVE_COUNT_CART = \"REMOVE_COUNT_CART\";\nexport const REMOVE_ITEM_CART = \"REMOVE_ITEM_CART\";\nexport const REMOVE_ALL_CART = \"REMOVE_ALL_CART\";\n","import {\n    REQUEST_PRODUCTS,\n    REQUEST_SUCCESS_PRODUCTS,\n    REQUEST_FAIL_PRODUCTS,\n} from 'constants/index';\n\nconst initialState = {\n    isLoading: false,\n    data: []\n}\n\nexport default (state = initialState, action) => {\n    const {type, payload} = action;\n\n    switch (type) {\n        case REQUEST_PRODUCTS:\n            return {\n                ...state,\n                isLoading: true\n            };\n        case REQUEST_SUCCESS_PRODUCTS:\n            return {\n                ...state,\n                data: payload.data,\n                isLoading: false\n            };\n        case REQUEST_FAIL_PRODUCTS:\n            return {\n                ...state,\n                isLoading: false\n            };\n        default:\n            return state;\n    }\n}","export const setCartLocalStorage = (cartState) => {\n    localStorage.setItem('cart', JSON.stringify(cartState));\n}\n\nexport const getCartLocalStorage = () => {\n    return JSON.parse(localStorage.getItem('cart')) || [];\n}\n\n","import {combineReducers} from 'redux';\r\n\r\nimport products from './products';\r\nimport cart from './cart';\r\nimport dealers from './dealers';\r\n\r\nexport default combineReducers({\r\n    products,\r\n    cart,\r\n    dealers\r\n});","import {\n    ADD_CART,\n    REMOVE_COUNT_CART,\n    REMOVE_ITEM_CART,\n    REMOVE_ALL_CART,\n} from 'constants/index';\n\nimport { getCartLocalStorage } from 'utils/index';\n\nexport default (state = getCartLocalStorage(), action) => {\n    const {type, payload} = action;\n\n    switch (type) {\n        case ADD_CART: {\n            const { product, count } = payload;\n            const id = state.findIndex(item => item.name === product.name);\n\n            if (id === -1) {\n                const newstate = [...state, {...product, count: 1}];\n\n                return newstate;\n            }\n\n            count ?\n                state[id].count = count\n                : state[id].count++;\n\n            return [...state];\n        }\n\n        case REMOVE_COUNT_CART: {\n            const { product } = payload;\n\n            state.find(item => item.name === product.name).count--;\n\n            return [...state];\n        }\n        \n        case REMOVE_ITEM_CART: {\n            const { product } = payload;\n            const id = state.findIndex(item => item.name === product.name);\n\n            state.splice(id, 1);\n\n            return [...state];\n        }\n\n        case REMOVE_ALL_CART:\n            return [];\n        default:\n            return state;\n    }\n}","export default (state = [], action) => {\n    return state;\n}","import {\n    REQUEST_PRODUCTS,\n    REQUEST_SUCCESS_PRODUCTS,\n    REQUEST_FAIL_PRODUCTS,\n    ADD_CART,\n    REMOVE_COUNT_CART,\n    REMOVE_ITEM_CART,\n    REMOVE_ALL_CART\n} from 'constants/index';\n\nexport function requestProducts(dealers) {\n    return {\n        type: REQUEST_PRODUCTS,\n        payload: {\n            dealers\n        }\n    }\n}\n\nexport function requestSuccesProducts(data) {\n    return {\n        type: REQUEST_SUCCESS_PRODUCTS,\n        payload: {\n            data\n        }\n    }\n}\n\nexport function requestFailProducts() {\n    return {\n        type: REQUEST_FAIL_PRODUCTS,\n        payload: {\n            isLoading: false,\n        }\n    }\n}\n\nexport function addToCart (product, count) {\n    return {\n        type: ADD_CART,\n        payload: {\n            product,\n            count\n        }\n    }\n}\n\nexport function removeCountFromCart (product) {\n    return {\n        type: REMOVE_COUNT_CART,\n        payload: {\n            product\n        }\n    }\n}\n\nexport function removeAllCart (product) {\n    return {\n        type: REMOVE_ALL_CART,\n        payload: {}\n    }\n}\n\nexport function removeItemFromCart (product) {\n    return {\n        type: REMOVE_ITEM_CART,\n        payload: {\n            product\n        }\n    }\n}\n","import axios from 'axios';\r\n\r\nconst URL_API = 'https://murmuring-tor-81614.herokuapp.com/api';\r\nconst URL = \"https://murmuring-tor-81614.herokuapp.com\";\r\n\r\nconst getProducts = (dealers) => {\r\n    const url = dealers && dealers.length ? `${URL_API}/goods/?dealers=${dealers}` : `${URL_API}/goods`;\r\n\r\n    return axios.get(url)\r\n      .then( (response) => {\r\n        return response.data;\r\n      });\r\n}\r\n\r\nconst getDealers = () => {\r\n  const url = `${URL_API}/dealers/`;\r\n\r\n  return axios.get(url)\r\n    .then( (response) => {\r\n      return response.data;\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n}\r\n\r\nexport default {\r\n    getProducts,\r\n    getDealers,\r\n    URL\r\n}\r\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport { REQUEST_PRODUCTS } from 'constants/index';\n\nimport {\n    requestSuccesProducts,\n    requestFailProducts,\n} from 'actions/index';\n\nimport API from 'api/index';\n\nfunction* requestProductsSaga(action) {\n   try {\n     const { dealers } = action.payload;\n     const data = yield call(API.getProducts, dealers);\n\n     yield put(requestSuccesProducts(data));\n   } catch (e) {\n      yield put(requestFailProducts(e));\n   }\n}\n\nfunction* saga() {\n  yield takeLatest(REQUEST_PRODUCTS, requestProductsSaga);\n}\n\nexport default saga;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport API from 'api/index';\n\nconst CardDefault = ({product, children}) => {\n    return (\n        <div className=\"card px-20\">\n            <div\n                style={{\n                    backgroundImage: `url(${API.URL}${product.image})`,\n                }}\n                className=\"bg-img\"\n            />\n            <h4>{product.name}</h4>\n            {children}\n        </div>\n    )\n}\n\nCardDefault.propTypes = {\n    product: PropTypes.object.isRequired,\n    children: PropTypes.node\n}\n\nexport default CardDefault;\n","import React from 'react';\n\nconst Loader = () => {\n    return (\n        <div className=\"progress\">\n            <div className=\"indeterminate\"></div>\n        </div>\n    )\n}\n\nexport default Loader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({children, className, clickHandler}) => {\n\n    return (\n        <button\n            type=\"button\"\n            className={`btn waves-effect waves-light ${className}`}\n            onClick={clickHandler}\n        >\n            {children}\n        </button>\n    )\n}\n\nButton.propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node,\n    clickHandler: PropTypes.func,\n}\n\nexport default Button;","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { requestProducts, addToCart } from 'actions/index';\r\n\r\nimport CardDefault from 'components/cards/cardDefault';\r\nimport Loader from 'components/loader';\r\nimport Button from 'components/button';\r\n\r\nconst ProductsPage = ({products, dealers, isLoading, requestProducts, addToCart}) => {\r\n\r\n    useEffect(() => {\r\n       requestProducts(dealers);\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col\" s={12}>\r\n                    <h1>Товары</h1>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                {\r\n                    !isLoading ?\r\n                        products.map((card, i) => {\r\n                            return (\r\n                                <div\r\n                                    key={i} // TODO: get id product from backend\r\n                                    className=\"col s12 m6 l4 mb-3\"\r\n                                >\r\n                                    <CardDefault product={card}>\r\n                                        <Button\r\n                                            clickHandler={() => addToCart(card)}\r\n                                        >\r\n                                            <i className=\"material-icons left\">add_shopping_cart</i>\r\n                                                в корзину\r\n                                            <span> ₽ {card.price}</span>\r\n                                        </Button>\r\n                                    </CardDefault>\r\n                                </div>\r\n                            )\r\n                        })\r\n                        : <Loader />\r\n                }\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        products: state.products.data,\r\n        dealers: state.dealers,\r\n        isLoading: state.products.isLoading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    requestProducts,\r\n    addToCart\r\n}\r\n\r\nProductsPage.propTypes = {\r\n    dealers: PropTypes.array,\r\n    products: PropTypes.array.isRequired,\r\n    requestProducts: PropTypes.func.isRequired,\r\n    addToCart: PropTypes.func.isRequired,\r\n    isLoading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsPage);\r\n","import React, {useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    addToCart,\r\n    removeCountFromCart,\r\n    removeItemFromCart,\r\n    removeAllCart\r\n} from 'actions/index';\r\n\r\nimport CardDefault from 'components/cards/cardDefault';\r\nimport Button from 'components/button';\r\n\r\nimport { setCartLocalStorage } from 'utils/index';\r\n\r\nconst Cart = ({ products, addToCart, removeCountFromCart, removeItemFromCart, removeAllCart }) => {\r\n    const [price, setPrice] = useState(0);\r\n\r\n    const clickRemoveHandler = (product) => {\r\n        if (product.count > 1) {\r\n            removeCountFromCart(product);\r\n        }\r\n    }\r\n\r\n    const clickRemoveAllHandler = () => {\r\n        removeAllCart()\r\n    }\r\n\r\n    const changeCountHandler = (e, product) => {\r\n        const parsedValue = parseInt(e.target.value, 10);\r\n\r\n        if (!isNaN(parsedValue) && ( parsedValue > 0)) {\r\n            addToCart(product, parsedValue);\r\n        }\r\n    }\r\n\r\n    const renderCardChildren = (product) => {\r\n        const { count, price } = product;\r\n        return (\r\n            <React.Fragment>\r\n                <h5>Цена: ₽ {+(count * price).toFixed(2).toString()}</h5>\r\n\r\n                <div className=\"row\">\r\n                    <Button\r\n                        className=\"col btn-floating red py-0\"\r\n                        clickHandler={() => clickRemoveHandler(product)}\r\n                    >\r\n                        <i className=\"material-icons\">remove</i>\r\n                    </Button>\r\n\r\n                    <div className=\"col s6 py-10\">\r\n                        <input\r\n                            type=\"text\"\r\n                            onChange={(e) => changeCountHandler(e, product)}\r\n                            value={count}\r\n                        />\r\n                    </div>\r\n\r\n                    <Button\r\n                        className=\"col btn-floating green py-0\"\r\n                        clickHandler={() => addToCart(product)}\r\n                    >\r\n                        <i className=\"material-icons\">add</i>\r\n                    </Button>\r\n                </div>\r\n                <Button\r\n                    clickHandler={() => removeItemFromCart(product)}\r\n                >\r\n                    <i className=\"material-icons left\">delete_forever</i>\r\n                    Удалить\r\n                </Button>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        const sum = products.reduce((acc,{price, count}) => {\r\n            return acc + (price * count);\r\n        }, 0);\r\n\r\n        setPrice(+sum.toFixed(2));\r\n    }, [products])\r\n\r\n    useEffect(() => {\r\n        setCartLocalStorage(products);\r\n    }, [products])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {\r\n                products.length ?\r\n                <div>\r\n                    <h2>Товары в вашей корзине</h2>\r\n                    <h4>\r\n                        {/* toString removes zero */}\r\n                        Общая стоимость товаров: ₽ {price.toString()}\r\n                    </h4>\r\n                    <Button\r\n                        className=\"mb-3\"\r\n                        clickHandler={clickRemoveAllHandler}\r\n                    >\r\n                        <i className=\"material-icons left\">delete_forever</i>\r\n                        Удалить все товары\r\n                    </Button>\r\n                    <div className=\"row\">\r\n                        {\r\n                            products.map((product, i) => {\r\n                                return (\r\n                                    <div\r\n                                        key={i}\r\n                                        className=\"col s12 m6 l4\"\r\n                                    >\r\n                                        <CardDefault\r\n                                            product={product}\r\n                                        >\r\n                                            {renderCardChildren(product)}\r\n                                        </CardDefault>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                : <h2>Ваша корзина пуста</h2>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        products: state.cart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addToCart,\r\n    removeCountFromCart,\r\n    removeItemFromCart,\r\n    removeAllCart\r\n}\r\n\r\nCart.propTypes = {\r\n    products: PropTypes.array.isRequired,\r\n    addToCart: PropTypes.func.isRequired,\r\n    removeCountFromCart: PropTypes.func.isRequired,\r\n    removeItemFromCart: PropTypes.func.isRequired,\r\n    removeAllCart: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\r\n","import React from 'react';\n\nexport default () => {\n    return <div className=\"container\"><h1>Страница не найдена</h1></div>;\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst Navbar = ({cart}) => {\n    const [countCart, setCountCart] = useState(0);\n\n    useEffect(() => {\n      const sum = cart.reduce((acc,el) => {\n        return acc + el.count;\n      }, 0);\n      setCountCart(sum);\n    }, [cart]);\n\n    return (\n      <div className=\"navbar-fixed\">\n        <nav>\n          <div className=\"nav-wrapper\">\n            <ul className=\"right\">\n              <li><NavLink to=\"/products\">Товары</NavLink></li>\n              <li>\n                <NavLink to=\"/cart\">\n                  Корзина {countCart || null}\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    )\n}\n\nNavbar.propTypes = {\n  cart: PropTypes.array.isRequired\n}\n\nexport default Navbar;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { requestProducts } from 'actions/index';\r\n\r\nimport Products from 'pages/products';\r\nimport Cart from 'pages/cart';\r\nimport PageNotFound from 'pages/404';\r\n\r\nimport Navbar from 'components/navbar';\r\n\r\nconst App = ({cart, requestProducts}) => {\r\n  return (\r\n    <Router basename=\"/online-store/build/\">\r\n        <Navbar cart={cart} /> \r\n\r\n        <Switch>\r\n          <Route path=\"/products\" component={Products} />\r\n          <Route path=\"/cart\" component={Cart} />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n\r\n        <Route exact path=\"/\">\r\n          <Redirect to=\"/products\" />\r\n        </Route>\r\n   \r\n    </Router>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      cart: state.cart\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  cart: PropTypes.array.isRequired,\r\n  requestProducts: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps, { requestProducts })(App);\r\n","import API from 'api/index';\r\n\r\nexport const renderDealers = async () => {\r\n    try {\r\n        const dealers = await API.getDealers();\r\n        renderCheckboxes(dealers);\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n\r\n}\r\n\r\nexport const startAppHandler = (event, initApp, typeEvent) => {\r\n    let dealers = [];\r\n    const form = document.getElementById('form-dealers');\r\n\r\n    if (typeEvent === 'form' && form) {\r\n        const checkboxes = form.querySelectorAll('.ch-dealers');\r\n        const checkboxesArray = Array.prototype.slice.call(checkboxes);\r\n\r\n        dealers = checkboxesArray\r\n                    .filter(el => el.checked)\r\n                    .map(item => item.value);\r\n    } else {\r\n        dealers = event.detail ? event.detail : [];\r\n    }\r\n\r\n    document.getElementById('start-app').remove();\r\n    initApp(dealers);\r\n}\r\n\r\nconst renderCheckboxes = (dealers) => {\r\n    const checkboxes = [];\r\n    const preloader = document.getElementById('chs-preloader');\r\n    const container = document.getElementById('checkboxes-placeholder');\r\n\r\n    dealers.forEach((dealer) => {\r\n        checkboxes.push(`\r\n            <label>\r\n                <input type=\"checkbox\" class=\"filled-in ch-dealers\" value=\"${dealer}\" />\r\n                <span>${dealer}</span>\r\n            </label><br />`)\r\n    });\r\n    preloader.remove();\r\n    container.innerHTML = checkboxes.join('');\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from './reducers';\r\nimport saga from 'sagas/index';\r\n\r\nimport App from './App';\r\n\r\nimport { startAppHandler, renderDealers } from 'startApp';\r\n\r\nimport './style/utils.css';\r\n\r\n// create the saga middleware\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst enhancer = composeEnhancers(applyMiddleware(sagaMiddleware));\r\n\r\nconst initApp = (dealers) => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        { dealers },\r\n        enhancer\r\n    );\r\n\r\n    sagaMiddleware.run(saga);\r\n\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\n//==============================================================\r\n// Create the event for launch app programmatically\r\nwindow.eventAPP = new CustomEvent(\"app_load\", {'detail': [] });\r\nconst btnStartApp = document.getElementById('start-btn');\r\n\r\nbtnStartApp.addEventListener('click', (e) => startAppHandler(e, initApp, 'form'))\r\ndocument.addEventListener('app_load', (e) => startAppHandler(e, initApp));\r\n\r\n// get and render dealers\r\nrenderDealers();\r\n"],"sourceRoot":""}